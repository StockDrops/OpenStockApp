<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
              xmlns:vm="clr-namespace:OpenStockApp.ViewModels.AlertSettings"
             xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:main="clr-namespace:OpenStockApp"
             xmlns:models="clr-namespace:OpenStockApp.Core.Maui.Models;assembly=OpenStockApp.Core.Maui"
             xmlns:api="clr-namespace:OpenStockApi.Core.Models.Products;assembly=OpenStockApi.Core"
             xmlns:apiusers="clr-namespace:OpenStockApi.Core.Models.Users;assembly=OpenStockApi.Core"
             xmlns:users="clr-namespace:OpenStockApi.Core.Models.Users;assembly=OpenStockApi.Core"
             xmlns:strings="clr-namespace:OpenStockApp.Resources.Strings"
             xmlns:converters="clr-namespace:OpenStockApp.Converters"
             xmlns:views="clr-namespace:OpenStockApp.Views"
             x:Class="OpenStockApp.Pages.Alerts.AlertSettingsPageMobile"
             x:DataType="vm:AlertSettingsViewModel"
             x:Name="page"
             Title="{x:Static strings:Resources.ShellAddNotifications}"
             >
    <ContentPage.Behaviors>
        <!--<mct:EventToCommandBehavior
            EventName="Appearing"
            Command="{Binding LoadProducts}" />-->
    </ContentPage.Behaviors>
    <ContentPage.Resources>
        <ResourceDictionary>
            <mct:BoolToObjectConverter x:Key="BoolToObjectConverter" TrueObject="Busy... Please wait..." FalseObject="Save Alert Settings" />
            <mct:InvertedBoolConverter x:Key="InvertedBoolConverter" />
            <mct:EnumToIntConverter x:Key="EnumToIntConverter" />
            <converters:DisplayedNotificationActionsToNotificationsActionConverter x:Key="DisplayedNotificationActionsConverter" EnumType="{x:Type apiusers:NotificationAction}" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="140" />
            <RowDefinition Height="*"/>
            <RowDefinition Height="{OnPlatform Android=40, Default=80}" />
        </Grid.RowDefinitions>

        <views:LogInView IsLoggedIn="{Binding IsLoggedIn}"
                            LogInCommand="{Binding LogIn}" 
                         Grid.Row="0"
                         Grid.RowSpan="3"/>

        <Grid Grid.Row="0">
            <StackLayout Margin="{OnPlatform iOS='30', Android='5', Default='30'}" 
                     IsVisible="{Binding IsLoggedIn}" 
                    >
                <!--<main:ConnectionIndicatorView IsConnected="{Binding BindingContext.IsConnected, Source={x:Reference page}}"
                                      ConnectCommand="{Binding BindingContext.ConnectCommand, Source={x:Reference page}}"
                                      />-->
                <!--<StackLayout IsVisible="{OnPlatform Android=False, Default=True}">
                    <Label Text="{x:Static strings:Resources.AddNotificationsExplanationTitle}" LineBreakMode="WordWrap" Style="{StaticResource ListTitleStyle}" Margin="0,10,0,10" />
                    <Label Text="{x:Static strings:Resources.AddNotificationsExplanation}" LineBreakMode="CharacterWrap" Style="{StaticResource BodyTextStyle}" HorizontalOptions="Start" MaximumWidthRequest="{OnPlatform Android=350, UWP=1400, MacCatalyst=1400}" Margin="0,10,0,10"/>
                </StackLayout>-->
                <Grid HeightRequest="40">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{OnPlatform UWP='0.3*', Default='0.6*'}"/>
                        <ColumnDefinition Width="0.4*"/>
                    </Grid.ColumnDefinitions>
                    <StackLayout Grid.Row="0" Grid.Column="0" Orientation="Horizontal">
                        <Label VerticalOptions="Center" Text="Products Options" Style="{StaticResource ListTitleStyle}"
                               Margin="0,10,0,10"/>
                        <Button Text="Help" IsVisible="{OnPlatform Android='False', UWP='True', Default='False'}" 
                                Command="{Binding DisplayHelp, Source={x:Reference page}}" 
                                HeightRequest="40"
                                Margin="10,10,0,10"/>
                    </StackLayout>
                    
                    <Button Text="Help" IsVisible="{OnPlatform Android='True', UWP='False', Default='True'}" Command="{Binding DisplayHelp, Source={x:Reference page}}" HeightRequest="40" HorizontalOptions="{OnPlatform Android='End', UWP='End', Default='End'}" Grid.Column="{OnPlatform Default=1, UWP=0}"/>
                </Grid>


                <Picker Title="Select a Product to track"
                        ItemsSource="{Binding Products}"
                        ItemDisplayBinding="{Binding Name}"
                        SelectedItem="{Binding SelectedProduct, Mode=OneWayToSource}"
                        Margin="0,10,0,10"
                >
                    <Picker.Behaviors>
                        <mct:EventToCommandBehavior EventName="SelectedIndexChanged" Command="{Binding LoadModels}" />
                    </Picker.Behaviors>
                </Picker>

            </StackLayout>
        </Grid>
        
        <views:ModelOptionsView ItemSource="{Binding Models}"
                                NotificationActions="{Binding NotificationActions}"
                                IsBusy="{Binding IsBusy}"
                                IsLoggedIn="{Binding IsLoggedIn}"
                                ReloadSourceCommand="{Binding LoadModels}"
                                SaveModelOptionsCommand="{Binding SaveModelOptions}"
                                IsVisible="{Binding IsLoggedIn}"
                                VerticalOptions="Start"
                                Grid.Row="1"/>
        

        <Button  Text="{Binding IsBusy, Converter={StaticResource BoolToObjectConverter}}"
                Command="{Binding SaveModelOptions}" 
                IsEnabled="{Binding IsBusy, Converter={StaticResource InvertedBoolConverter}}"
                 IsVisible="{Binding IsLoggedIn}"
                Grid.Row="2"/>
    </Grid>
</ContentPage>
