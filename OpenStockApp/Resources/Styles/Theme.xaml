<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                    xmlns:styles="clr-namespace:OpenStockApp.Resources.Styles"
                    xmlns:android="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific;assembly=Microsoft.Maui.Controls"
                    x:Class="OpenStockApp.Resources.Styles.Theme"
                    >
    <ResourceDictionary.MergedDictionaries>
        
        <styles:_Thickness/>
    </ResourceDictionary.MergedDictionaries>
    <Color x:Key="PrimaryColor">#4a148c</Color>
    <Color x:Key="TextOnPrimaryColor">#ffffff</Color>
    <Color x:Key="SecondaryColor">#1a237e</Color>
    <Color x:Key="TextOnSecondaryColor">#ffffff</Color>

    <Color x:Key="BackgroundColor">#F9F4ED</Color>
    <Color x:Key="BackgroundColorDark">#121212</Color>

    <Color x:Key="PrimaryColorDark">#12005e</Color>
    <Color x:Key="SecondaryColorDark">#000051</Color>

    <Color x:Key="TPrimary">#512BD4</Color>
    <Color x:Key="TLight">#DFD8F7</Color>
    <Color x:Key="TDark">#2B0B98</Color>
    <Color x:Key="TWhite">White</Color>
    <Color x:Key="TBlack">Black</Color>
    <Color x:Key="TLightGray">#E5E5E1</Color>
    <Color x:Key="TMidGray">#969696</Color>
    <Color x:Key="TDarkGray">#505050</Color>

    <Style TargetType="Label">
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={DynamicResource BackgroundColor},Light={DynamicResource BackgroundColorDark}}" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
    </Style>
    <!--<Style TargetType="RadioButton" x:Key="RadioButtonStyle">
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource BackgroundColor},Light={StaticResource BackgroundColorDark}}" />
    </Style>-->
    <!--<Setter Property="VisualStateManager.VisualStateGroups">
        <VisualStateGroupList>
            <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                    <VisualState.Setters>
                        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource PrimaryColorDark}, Light={StaticResource PrimaryColor}, Default={StaticResource PrimaryColor}}" />
                        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource TextOnPrimaryColor}, Light={StaticResource TextOnPrimaryColor}}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                    <VisualState.Setters>
                        <Setter Property="BackgroundColor" Value="{StaticResource TextOnPrimaryColor}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Focused">
                    <VisualState.Setters>
                        <Setter Property="BackgroundColor" Value="{StaticResource TextOnPrimaryColor}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                    <VisualState.Setters>
                        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource PrimaryColorGreyed}, Light={StaticResource PrimaryColorGreyed}, Default={StaticResource PrimaryColorGreyed}}" />
                        <Setter Property="TextColor" Value="{StaticResource TextOnPrimaryColor}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateGroupList>
    </Setter>-->
    
    <!--<Style TargetType="Label"
           x:Key="BodySLabelStyle">
        <Setter Property="FontSize"
                Value="14" />
        --><!--<Setter Property="FontFamily"
                Value="SegoeUiRegular" />--><!--
        <Setter Property="TextColor"
                Value="{AppThemeBinding Light={StaticResource Dark}, Dark={StaticResource TLightGray}}" />
    </Style>-->

    <Style x:Key="BaseButton" TargetType="Button">
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource TextOnPrimaryColor}, Light={StaticResource TextOnPrimaryColor}}" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource PrimaryColorDark}, Light={StaticResource PrimaryColor}, Default={StaticResource PrimaryColor}}" />
        <Setter Property="Padding" Value="14,10" />
    </Style>
    <Style TargetType="Button" x:Key="LeftSideButton" BasedOn="{StaticResource BaseButton}">
        <Setter Property="MaximumWidthRequest" Value="500"/>
        <Setter Property="HorizontalOptions" Value="Start"/>
        <Setter Property="Margin" Value="{StaticResource SmallTopBottomRightMargin}" />
    </Style>

    <Style x:Key="RightBottomButton" TargetType="Button" BasedOn="{StaticResource BaseButton}">
        <Setter Property="HeightRequest" Value="40"/>
        <Setter Property="WidthRequest" Value="150" />
        <Setter Property="VerticalOptions" Value="End"/>
        <Setter Property="HorizontalOptions" Value="End"/>
        <Setter Property="Margin" Value="5"/>
    </Style>
    
    <Style x:Key="BodyTextStyle" TargetType="{x:Type Label}">
    </Style>

    <Style TargetType="Entry" x:Key="BaseEntry">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource TDark}, Dark={StaticResource TLight}}" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14" />
        
        <Setter Property="MaximumWidthRequest" Value="1500" />
        <Setter Property="MinimumWidthRequest" Value="{OnPlatform Default=20, UWP=400}" />
        <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource TDark}, Dark={StaticResource TLight}}" />
       
        
        <Setter Property="HorizontalOptions" Value="{OnPlatform Default=Fill, UWP=StartAndExpand}" />
        
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource TBlack}, Dark={StaticResource TWhite}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource TLightGray}, Dark={StaticResource TDarkGray}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <!--<Style TargetType="Entry" >
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={DynamicResource SecondaryColorDark}, Light={DynamicResource SecondaryColor}}" />
        
        
    </Style>-->
    <Style TargetType="Entry" x:Key="InvalidEntry" BasedOn="{StaticResource BaseEntry}">
        <Setter Property="TextColor" Value="Red"/>
    </Style>
    <Style TargetType="Entry" x:Key="ValidEntry" BasedOn="{StaticResource BaseEntry}">
        <Setter Property="TextColor" Value="Green"/>
    </Style>
</ResourceDictionary>