<?xml version="1.0" encoding="utf-8" ?>
<CollectionView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
                xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
                xmlns:converters="clr-namespace:OpenStockApp.Converters"
                xmlns:models="clr-namespace:OpenStockApp.Core.Maui.Models;assembly=OpenStockApp.Core.Maui"
                xmlns:views="clr-namespace:OpenStockApp.Views"
                xmlns:validators="clr-namespace:OpenStockApp.Core.Maui.Behaviors;assembly=OpenStockApp.Core.Maui"
                xmlns:converterscore="clr-namespace:OpenStockApp.Core.Maui.Converters;assembly=OpenStockApp.Core.Maui"
                xmlns:users="clr-namespace:OpenStockApi.Core.Models.Users;assembly=OpenStockApi.Core"
                x:Class="OpenStockApp.Views.ModelOptionsView"
                x:DataType="views:ModelOptionsView"
                x:Name="view"
                ItemsSource="{Binding ItemSource, Source={x:Reference view}}"
                            
                SelectionMode="None"
                Grid.Row="0"
                IsGrouped="true"
                                
                Margin="{OnPlatform Default='30,10,30,10', Android='0,1,0,1', iOS='5,5,5,5'}"
             >
    <CollectionView.Resources>
        <mct:BoolToObjectConverter x:Key="BoolToObjectConverter" TrueObject="Busy... Please wait..." FalseObject="Save Alert Settings" />
        <mct:InvertedBoolConverter x:Key="InvertedBoolConverter" />
        <converterscore:EnumToIntConverter x:Key="EnumToIntConverter" />

    </CollectionView.Resources>
    <CollectionView.Header>
                    <Grid Margin="{OnPlatform Default='5,2,5,2', Android='0,2,0,2', iOS='0,2,0,2'}"
                          RowDefinitions="200">
                    <VerticalStackLayout IsVisible="{Binding IsLoggedIn, Source={x:Reference view}}">
                        <VerticalStackLayout Margin="{OnPlatform iOS='5,10,5,0', Android='5', Default='30'}" 
                                    IsVisible="{Binding IsLoggedIn, Source={x:Reference view}}" >
                            <Grid HeightRequest="40">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="{OnPlatform UWP='0.3*', Default='0.6*'}"/>
                                        <ColumnDefinition Width="0.4*"/>
                                    </Grid.ColumnDefinitions>
                                    <HorizontalStackLayout Grid.Row="0" Grid.Column="0" >
                                        <Label VerticalOptions="Center" Text="Products Options" Style="{StaticResource ListTitleStyle}"
                                   Margin="0,10,0,10"/>
                                        <Button Text="Help" IsVisible="{OnPlatform Android='False', UWP='True', Default='False'}" 
                                    Command="{Binding HelpCommand, Source={x:Reference view}}" 
                                    HeightRequest="40"
                                    Margin="10,10,0,10"/>
                                    </HorizontalStackLayout>
                                    <Button Text="Help" 
                                    IsVisible="{OnPlatform Android='True', UWP='False', Default='True'}" 
                                    Command="{Binding HelpCommand, Source={x:Reference view}}" 
                                    HeightRequest="40" 
                                    HorizontalOptions="{OnPlatform Android='End', UWP='End', Default='End'}" 
                                    Grid.Column="{OnPlatform Default=1, UWP=0}"/>
                                </Grid>


                                <Border Margin="2,5,2,0"
                                        BackgroundColor="{AppThemeBinding Dark='#2a292f', Light='#E0DFE2', Default='#2a292f'}"
                                        Stroke="{AppThemeBinding Dark='#2a292f', Light='#E0DFE2', Default='#2a292f'}"
                                        Padding="8">
                                    <Border.StrokeShape>
                                        <RoundRectangle CornerRadius="9" />
                                    </Border.StrokeShape>
                                    <Picker Title="{Binding ProductPickerTitle, Source={x:Reference view}}"
                                            TitleColor="{AppThemeBinding Dark='#AEAEB2', Light='#989997', Default='#AEAEB2'}"
                                            TextColor="{AppThemeBinding Dark='#AEAEB2', Light='#989997', Default='#AEAEB2'}"
                                            BackgroundColor="{AppThemeBinding Dark='#2a292f', Light='#E0DFE2', Default='#2a292f'}"
                                            HeightRequest="{OnPlatform iOS=20, Default=10}"
                                            ItemsSource="{Binding Products, Source={x:Reference view}}"
                                            ItemDisplayBinding="{Binding Name}"
                                            SelectedItem="{Binding SelectedProduct, Mode=OneWayToSource, Source={x:Reference view}}">
                                        <Picker.Behaviors>
                                            <mct:EventToCommandBehavior EventName="SelectedIndexChanged" Command="{Binding SelectedProductCommand, Source={x:Reference view}}" />
                                        </Picker.Behaviors>
                                    </Picker>
                                </Border>

                            </VerticalStackLayout>

                            <SearchBar x:Name="searchBar"
                               IsTextPredictionEnabled="True"
                               Placeholder="Search for a model"
                               SearchCommand="{Binding PerformSearchCommand, Source={x:Reference view}}"
                               SearchCommandParameter="{Binding Text, Source={x:Reference searchBar}}"
                               Margin="0,0,0,5"
                               >
                                <SearchBar.Behaviors>
                                    <mct:EventToCommandBehavior EventName="TextChanged"
                                                        Command="{Binding PerformSearchCommand, Source={x:Reference view}}"
                                                        CommandParameter="{Binding Text, Source={x:Reference searchBar}}"/>
                                </SearchBar.Behaviors>
                            </SearchBar>
                            <HorizontalStackLayout Margin="0,2,0,2">
                                <Button Text="Enable All" Command="{Binding SelectCommand, Source={x:Reference view}}" Margin="0,0,5,0" />
                                <Button Text="Disable All" Command="{Binding DeselectCommand, Source={x:Reference view}}" Margin="0,0,5,0" />
                            </HorizontalStackLayout>
                        </VerticalStackLayout>
                    </Grid>
                </CollectionView.Header>
                <!--<CollectionView.ItemsLayout>
                    <LinearItemsLayout Orientation="Vertical"
                                       ItemSpacing="5"/>
                </CollectionView.ItemsLayout>-->
                <CollectionView.GroupHeaderTemplate>
                    <DataTemplate x:DataType="models:GroupedObversableModelOptions">
                        <Grid HorizontalOptions="StartAndExpand"
                                  VerticalOptions="StartAndExpand"
                                  MinimumHeightRequest="{OnPlatform Default=80, Android=30, iOS=28}"
                                  HeightRequest="{OnPlatform Default=80, Android=30, iOS=28}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.1*"/>
                                <RowDefinition Height="0.8*"/>
                                <RowDefinition Height="0.1*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.2*"/>
                                <ColumnDefinition Width="0.6*"/>
                                <ColumnDefinition Width="0.2*"/>
                            </Grid.ColumnDefinitions>
                            <Label Text="{Binding Name}"
                                   Style="{StaticResource SubtitleTextStyle}"
                                       Grid.Column="1"
                                       Grid.Row="1"
                                       HorizontalOptions="CenterAndExpand"
                                       VerticalOptions="CenterAndExpand"
                                   />
                        </Grid>

                    </DataTemplate>
                </CollectionView.GroupHeaderTemplate>
                <CollectionView.ItemTemplate>
                    <DataTemplate x:DataType="models:ShowModel">
                        <Grid HeightRequest="{OnPlatform Default=400, Android=250, iOS=255}"
                              Padding="10"
                              
                                  RowDefinitions="60,40,40,40,40,40"
                                  Margin="0,10,20,10"
                                  ColumnDefinitions="0.35*,0.65*">
                            <Label Text="{Binding Model.Name}"
                                       HorizontalOptions="Start"
                                       LineBreakMode="WordWrap"
                                       FontSize="Small"
                                       FontAttributes="Bold"
                                       Margin="{OnPlatform Default='0,10,0,10', Android='0,2,0,2'}"
                                       Grid.Row="0"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="2"
                                       />

                            <Label Text="Enable"
                                       Margin="0,10,0,10"
                                       VerticalOptions="Center"
                                       Grid.Row="1"
                                       Grid.Column="0"/>
                            <CheckBox IsChecked="{Binding ModelOptions.IsEnabled}"
                                          VerticalOptions="Center"
                                          BackgroundColor="{AppThemeBinding Default={OnPlatform iOS='Transparent'}}"
                                          Grid.Row="1"
                                          Grid.Column="1"/>

                            <Label Text="Max Price:" 
                                       Margin="0,10,0,10"
                                       Grid.Row="2"
                                       Grid.Column="0"/>
                            <Entry Keyboard="Numeric" 
                                       IsTextPredictionEnabled="False"
                                       Text="{Binding ModelOptions.MaxPrice}" 
                                       MinimumWidthRequest="100"
                                       BackgroundColor="{AppThemeBinding Dark={OnPlatform Default='#2a292f'}, Light={OnPlatform Default='#2a292f'}, Default={OnPlatform Default='#2a292f'}}"
                                       Margin="0,2,8,2"
                                       Grid.Row="2"
                                       Grid.Column="1">
                                <Entry.Behaviors>
                                    <validators:NumericValidationBehavior Flags="ValidateOnValueChanged"
                                                                       MaximumDecimalPlaces="2"
                                                                       InvalidStyle="{StaticResource InvalidEntry}"
                                                                       ValidStyle="{StaticResource ValidEntry}"                                                                       
                                            />
                                </Entry.Behaviors>
                            </Entry>

                            <Label Text="Min Price:"
                                       Margin="0,10,0,10"
                                       Grid.Row="3"
                                       Grid.Column="0"/>
                            <Entry Text="{Binding ModelOptions.MinPrice}" 
                                       Keyboard="Numeric" 
                                       MinimumWidthRequest="100"
                                       Margin="0,2,8,2"
                                       BackgroundColor="{AppThemeBinding Dark={OnPlatform Default='#2a292f'}, Light={OnPlatform Default='#2a292f'}, Default={OnPlatform Default='#2a292f'}}"
                                       Grid.Row="3"
                                       Grid.Column="1">
                                <Entry.Behaviors>
                                    <validators:NumericValidationBehavior Flags="ValidateOnValueChanged"
                                                                       MaximumDecimalPlaces="2"
                                                                       InvalidStyle="{StaticResource InvalidEntry}"
                                                                       ValidStyle="{StaticResource ValidEntry}"                                                                       
                                            />
                                </Entry.Behaviors>
                            </Entry>

                            <Label Text="Action:" 
                                       Margin="0,10,0,5"
                                       Grid.Row="4"
                                       Grid.Column="0"/>
                            <Frame BorderColor="{AppThemeBinding Dark='#2a292f', Default='#2a292f'}"
                                        Padding="1"
                                        Margin="2,0,8,4"
                                        Grid.Row="5"
                                        Grid.ColumnSpan="2"
                                        IsClippedToBounds="True"
                                        BackgroundColor="{AppThemeBinding Dark={OnPlatform Default='#2a292f'}, Light={OnPlatform Default='#2a292f'}, Default={OnPlatform Default='#2a292f'}}"
                                        >
                                <Picker ItemDisplayBinding="{Binding Description}"
                                            HeightRequest="30"
                                            Margin="5"
                                        
                                        BackgroundColor="{AppThemeBinding Dark={OnPlatform Default='#2a292f'}, Light={OnPlatform Default='#2a292f'}, Default={OnPlatform Default='#2a292f'}}"
                                        SelectedIndex="{Binding ModelOptions.NotificationAction, Mode=TwoWay, Converter={StaticResource EnumToIntConverter}, ConverterParameter={x:Type users:NotificationAction}}"
                                        ItemsSource="{Binding BindingContext.NotificationActions, Source={x:Reference view}}"
                                            />
                            </Frame>
                        </Grid>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
    
    <CollectionView.Footer>
        <Grid IsVisible="{Binding ShowSaveButton, Source={x:Reference view}}">
            <Button Text="{Binding IsBusy, Converter={StaticResource BoolToObjectConverter}, Source={x:Reference view}}"
                    Command="{Binding SaveCommand, Source={x:Reference view}}" 
                    IsEnabled="{Binding IsBusy, Converter={StaticResource InvertedBoolConverter}, Source={x:Reference view}}"
                    IsVisible="{Binding IsLoggedIn, Source={x:Reference view}}"/>
        </Grid>
    </CollectionView.Footer>
</CollectionView>