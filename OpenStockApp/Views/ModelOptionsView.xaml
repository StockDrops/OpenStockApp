<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:converters="clr-namespace:OpenStockApp.Converters"
             xmlns:models="clr-namespace:OpenStockApp.Core.Maui.Models;assembly=OpenStockApp.Core.Maui"
             xmlns:views="clr-namespace:OpenStockApp.Views"
             xmlns:validators="clr-namespace:OpenStockApp.Core.Maui.Behaviors;assembly=OpenStockApp.Core.Maui"
             xmlns:converterscore="clr-namespace:OpenStockApp.Core.Maui.Converters;assembly=OpenStockApp.Core.Maui"
             xmlns:users="clr-namespace:OpenStockApi.Core.Models.Users;assembly=OpenStockApi.Core"
             x:Class="OpenStockApp.Views.ModelOptionsView"
             x:DataType="views:ModelOptionsView"
             x:Name="view"
             >
    <ContentView.Resources>
        <mct:BoolToObjectConverter x:Key="BoolToObjectConverter" TrueObject="Busy... Please wait..." FalseObject="Save Alert Settings" />
        <mct:InvertedBoolConverter x:Key="InvertedBoolConverter" />
        <converterscore:EnumToIntConverter x:Key="EnumToIntConverter" />

    </ContentView.Resources>
    <ContentView.Content>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="{OnPlatform Android=40, Default=50}"/>
                <RowDefinition Height="*"/>
                
            </Grid.RowDefinitions>
            <SearchBar x:Name="searchBar"
                       Grid.Row="0"
                           IsTextPredictionEnabled="True"
                           Placeholder="Search for a model"
                           SearchCommand="{Binding PerformSearchCommand, Source={x:Reference view}}"
                           SearchCommandParameter="{Binding Text, Source={x:Reference searchBar}}"
                           Margin="{OnPlatform Default='30,10,30,10', Android='0,2,0,2'}">
                <SearchBar.Behaviors>
                    <mct:EventToCommandBehavior EventName="TextChanged"
                                                    Command="{Binding PerformSearchCommand, Source={x:Reference view}}"
                                                    CommandParameter="{Binding Text, Source={x:Reference searchBar}}"/>
                </SearchBar.Behaviors>
            </SearchBar>


            <CollectionView ItemsSource="{Binding ItemSource, Source={x:Reference view}}"
                            
                            Grid.Row="1"
                            IsGrouped="true"
                            
                            Margin="{OnPlatform Default='30,10,30,10', Android='0,1,0,1'}">
                <CollectionView.ItemsLayout>
                    <GridItemsLayout Orientation="Vertical"
                                     Span="{OnPlatform Android=1, iOS=1, Default=1}"
                                     VerticalItemSpacing="10"
                                     HorizontalItemSpacing="10"/>
                </CollectionView.ItemsLayout>
                <CollectionView.GroupHeaderTemplate>
                    <DataTemplate x:DataType="models:GroupedObversableModelOptions">
                        <Grid HorizontalOptions="StartAndExpand"
                                  VerticalOptions="StartAndExpand"
                                  MinimumHeightRequest="{OnPlatform Default=80, Android=30}"
                                  HeightRequest="{OnPlatform Default=80, Android=30}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.1*"/>
                                <RowDefinition Height="0.8*"/>
                                <RowDefinition Height="0.1*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.2*"/>
                                <ColumnDefinition Width="0.6*"/>
                                <ColumnDefinition Width="0.2*"/>
                            </Grid.ColumnDefinitions>
                            <Label Text="{Binding Name}"
                                   Style="{StaticResource SubtitleTextStyle}"
                                       Grid.Column="1"
                                       Grid.Row="1"
                                       HorizontalOptions="CenterAndExpand"
                                       VerticalOptions="CenterAndExpand"
                                   />
                        </Grid>

                    </DataTemplate>
                </CollectionView.GroupHeaderTemplate>
                <CollectionView.ItemTemplate>
                    <DataTemplate x:DataType="models:ObservableModelOptions">
                        <Grid HeightRequest="{OnPlatform Default=400, Android=250}">
                            <StackLayout>
                                <Label Text="{Binding Model.Name}"
                                           LineBreakMode="WordWrap"
                                           FontSize="Small"
                                           FontAttributes="Bold"
                                           Margin="{OnPlatform Default='0,10,0,10', Android='0,2,0,2'}"/>
                                <StackLayout Orientation="{OnPlatform Android='Horizontal', Default='Vertical'}">
                                    <Label Text="Enable" Margin="0,10,0,10" />
                                    <CheckBox IsChecked="{Binding ModelOptions.IsEnabled}"/>
                                </StackLayout>
                                <StackLayout Orientation="{OnPlatform Android='Horizontal', Default='Vertical'}">
                                    <Label Text="Max Price:" Margin="0,10,0,10"/>
                                    <Entry Keyboard="Numeric" IsTextPredictionEnabled="False" Text="{Binding ModelOptions.MaxPrice}" MinimumWidthRequest="100">
                                        <Entry.Behaviors>
                                            <validators:NumericValidationBehavior Flags="ValidateOnValueChanged"
                                                                       MaximumDecimalPlaces="2"
                                                                       InvalidStyle="{StaticResource InvalidEntry}"
                                                                       ValidStyle="{StaticResource ValidEntry}"                                                                       
                                            />
                                        </Entry.Behaviors>
                                    </Entry>
                                </StackLayout>
                                <StackLayout Orientation="{OnPlatform Android='Horizontal', Default='Vertical'}">
                                    <Label Text="Min Price:" Margin="0,10,0,10"/>
                                    <Entry Text="{Binding ModelOptions.MinPrice}" Keyboard="Numeric" MinimumWidthRequest="100" >
                                        <Entry.Behaviors>
                                            <validators:NumericValidationBehavior Flags="ValidateOnValueChanged"
                                                                       MaximumDecimalPlaces="2"
                                                                       InvalidStyle="{StaticResource InvalidEntry}"
                                                                       ValidStyle="{StaticResource ValidEntry}"                                                                       
                                            />
                                        </Entry.Behaviors>
                                    </Entry>
                                </StackLayout>
                                <StackLayout Orientation="{OnPlatform Android='Vertical', Default='Vertical'}">
                                    <Label Text="Action:" Margin="0,10,0,10" />
                                    <Picker ItemDisplayBinding="{Binding Description}"
                                        SelectedIndex="{Binding ModelOptions.NotificationAction, Mode=TwoWay, Converter={StaticResource EnumToIntConverter}, ConverterParameter={x:Type users:NotificationAction}}"
                                        ItemsSource="{Binding BindingContext.NotificationActions, Source={x:Reference view}}"
                                            />
                                </StackLayout>
                            </StackLayout>
                        </Grid>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
            <!--<Button  Text="{Binding IsBusy, Converter={StaticResource BoolToObjectConverter}}"
                    Command="{Binding SaveModelOptionsCommand, Source={x:Reference view}}" 
                    IsEnabled="{Binding IsBusy, Converter={StaticResource InvertedBoolConverter}}"
                     IsVisible="{Binding IsLoggedIn}"
                    Grid.Row="2"/>
            <Button Text="Log In"
                Grid.Row="2"
                IsVisible="{Binding IsLoggedIn, Converter={StaticResource InvertedBoolConverter}}" />-->
        </Grid>
    </ContentView.Content>
</ContentView>